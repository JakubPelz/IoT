{"ast":null,"code":"var _jsxFileName = \"/Users/JakubMac/Documents/GitHub/Fapi/frontend/src/pages/CustomerInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { UserContext } from '../components/context/UserContext';\nimport AddressInput from '../components/inputs/AddressInput';\nimport CityInput from '../components/inputs/CityInput';\nimport CompanyInput from '../components/inputs/CompanyInput';\nimport EmailInput from '../components/inputs/EmailInput';\nimport NameInput from '../components/inputs/NameInput';\nimport ZipInput from '../components/inputs/ZipInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerInfo = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  const {\n    user,\n    setUser\n  } = React.useContext(UserContext);\n  const isValidName = name != null && name.trim().length > 0;\n  const isValidCompany = companyName != null && companyName.trim().length > 0;\n  const isValidEmail = email != null && email.trim().length > 0;\n  const isValidCity = city != null && city.trim().length > 0;\n  const isValidAddress = address != null && address.trim().length > 0;\n  const isValidZip = zip != null && zip.trim().length > 0;\n\n  const submit = async e => {\n    e.preventDefault();\n    const response = {\n      name,\n      companyName,\n      email,\n      address,\n      city,\n      zip\n    };\n    setUser(response);\n\n    if (isValidAddress && isValidName && isValidCompany && isValidEmail && isValidCity && isValidZip) {\n      setRedirect(true);\n    }\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui vertical mashead segment\",\n    style: {\n      marginTop: \"50px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui center aligned container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui vertical left aligned footer segment\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center aligned container\",\n          id: \"CustomerInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"30px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Pros\\xEDm zadejte v\\u0161echny sv\\xE9 \\xFAdaje\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"ui form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ui stackable inverted divided grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"eight wide column\",\n                  children: [/*#__PURE__*/_jsxDEV(NameInput, {\n                    user: user,\n                    setName: setName,\n                    name: name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(CompanyInput, {\n                    user: user,\n                    setCompanyName: setCompanyName,\n                    companyName: companyName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(EmailInput, {\n                    user: user,\n                    setEmail: setEmail,\n                    email: email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"eight wide column\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Adresa\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(CityInput, {\n                    city: city,\n                    setCity: setCity,\n                    user: user\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(AddressInput, {\n                    user: user,\n                    setAddress: setAddress,\n                    address: address\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ZipInput, {\n                    user: user,\n                    setZip: setZip,\n                    zip: zip\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"ui button\",\n                type: \"submit\",\n                style: {\n                  marginTop: '30px'\n                },\n                onClick: submit,\n                children: \"Potvrdit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomerInfo, \"u8evoDXD8sJqMZO9kaGLgTwPAxU=\");\n\n_c = CustomerInfo;\nexport default CustomerInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerInfo\");","map":{"version":3,"sources":["/Users/JakubMac/Documents/GitHub/Fapi/frontend/src/pages/CustomerInfo.jsx"],"names":["React","useState","Navigate","UserContext","AddressInput","CityInput","CompanyInput","EmailInput","NameInput","ZipInput","CustomerInfo","name","setName","companyName","setCompanyName","email","setEmail","address","setAddress","city","setCity","zip","setZip","redirect","setRedirect","user","setUser","useContext","isValidName","trim","length","isValidCompany","isValidEmail","isValidCity","isValidAddress","isValidZip","submit","e","preventDefault","response","marginTop","margin"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\nimport { UserContext } from '../components/context/UserContext'\nimport AddressInput from '../components/inputs/AddressInput'\nimport CityInput from '../components/inputs/CityInput'\nimport CompanyInput from '../components/inputs/CompanyInput'\nimport EmailInput from '../components/inputs/EmailInput'\nimport NameInput from '../components/inputs/NameInput'\nimport ZipInput from '../components/inputs/ZipInput'\n\nconst CustomerInfo = () => {\n  const [name, setName] = useState(\"\")\n  const [companyName, setCompanyName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [address, setAddress] = useState(\"\")\n  const [city, setCity] = useState(\"\")\n  const [zip, setZip] = useState(\"\")\n  const [redirect, setRedirect] = useState(false);\n  const { user, setUser } = React.useContext(UserContext)\n\n  const isValidName = name != null && name.trim().length > 0;\n  const isValidCompany = companyName != null && companyName.trim().length > 0;\n  const isValidEmail = email != null && email.trim().length > 0;\n  const isValidCity = city != null && city.trim().length > 0;\n  const isValidAddress = address != null && address.trim().length > 0;\n  const isValidZip = zip != null && zip.trim().length > 0;\n\n  const submit = async (e) => {\n    e.preventDefault();\n    const response = { name, companyName, email, address, city, zip };\n    setUser(response)\n    if (isValidAddress && isValidName && isValidCompany && isValidEmail && isValidCity && isValidZip) {\n      setRedirect(true)\n    }\n  }\n\n  if (redirect) {\n    return <Navigate to={\"/products\"} />\n  }\n\n  return (\n    <div className='ui vertical mashead segment' style={{ marginTop: \"50px\" }}>\n      <div className='ui center aligned container'>\n        <div className=\"ui vertical left aligned footer segment\">\n          <div className=\"center aligned container\" id='CustomerInfo'>\n            <div style={{ margin: \"30px\" }}>\n              <h1>Prosím zadejte všechny své údaje</h1>\n            </div>\n            <div style={{ margin: \"20px\" }}>\n              <form className=\"ui form\">\n                <div className=\"ui stackable inverted divided grid\">\n                  <div className=\"eight wide column\">\n                    <NameInput user={user} setName={setName} name={name} />\n                    <CompanyInput user={user} setCompanyName={setCompanyName} companyName={companyName} />\n                    <EmailInput user={user} setEmail={setEmail} email={email} />\n                  </div>\n\n                  <div className=\"eight wide column\">\n                    <h3>Adresa</h3>\n                    <CityInput city={city} setCity={setCity} user={user} />\n                    <AddressInput user={user} setAddress={setAddress} address={address} />\n                    <ZipInput user={user} setZip={setZip} zip={zip} />\n                  </div>\n                </div>\n\n                <button\n                  className=\"ui button\"\n                  type=\"submit\"\n                  style={{ marginTop: '30px' }}\n                  onClick={submit}\n                >\n                  Potvrdit\n                </button>\n\n              </form>\n            </div>\n          </div>\n        </div></div>\n    </div >\n  )\n}\n\nexport default CustomerInfo"]},"metadata":{},"sourceType":"module"}