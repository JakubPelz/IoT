{"ast":null,"code":"var _jsxFileName = \"/Users/JakubMac/Documents/GitHub/Fapi/frontend/src/pages/CustomerInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { UserContext } from '../components/context/UserContext';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerInfo = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  const {\n    user,\n    setUser\n  } = React.useContext(UserContext);\n  const [validation, setValidation] = useState({\n    validationName: \"\",\n    validationEmail: \"\",\n    validationCompany: \"\",\n    validationCity: \"\",\n    validationAddress: \"\",\n    validationZip: \"\"\n  });\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  const submit = async e => {\n    e.preventDefault();\n    const response = {\n      name,\n      companyName,\n      email,\n      address,\n      city,\n      zip\n    };\n    setUser(response); //Validation\n\n    const isValidName = name != null && name.trim() > 2;\n    const isValidCompany = companyName != null && name.trim() > 2;\n    const isValidEmail = email != null && email.trim().length > 0;\n    const isValidCity = city != null && city.trim().length > 0;\n    const isValidAddress = address != null && address.trim().lenght > 0;\n    const isValidZip = zip != null && zip.trim().length > 0;\n\n    if (!isValidEmail) {\n      validation.validationEmail = \"Je potřeba vyplnit email.\";\n    }\n\n    if (!isValidName) {\n      validation.validationName = \"Je potřeba vyplnit jméno a příjmení.\";\n    }\n\n    if (!isValidCompany) {\n      validation.validationCompany = \"Je potřeba vyplnit název firmy.\";\n    }\n\n    if (!isValidCity) {\n      validation.validationCity = \"Je potřeba vyplnit město.\";\n    }\n\n    if (!isValidAddress) {\n      validation.validationAddress = \"Je potřeba vyplnit adresu.\";\n    }\n\n    if (!isValidZip) {\n      validation.validationZip = \"Je potřeba vyplnit PSČ.\";\n    } else {\n      setRedirect(true);\n    }\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui vertical mashead segment\",\n    style: {\n      marginTop: \"50px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui center aligned container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui vertical left aligned footer segment\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center aligned container\",\n          id: \"CustomerInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"30px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Pros\\xEDm zadejte v\\u0161echny sv\\xE9 \\xFAdaje\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"ui form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ui stackable inverted divided grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"eight wide column\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: \"Objednavatel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Jm\\xE9no a p\\u0159\\xEDjmen\\xED\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"name\",\n                      placeholder: user === null ? \"Jméno a příjmení\" : user.name,\n                      required: true,\n                      onChange: e => setName(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"validation\",\n                      children: validation.validationName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"N\\xE1zev firmy\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"company\",\n                      placeholder: user === null ? \"Název firmy\" : user.companyName,\n                      required: true,\n                      onChange: e => setCompanyName(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"validation\",\n                      children: validation.validationCompany\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"email\",\n                      placeholder: user === null ? \"Email\" : user.email,\n                      id: \"email\",\n                      onChange: e => setEmail(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"validation\",\n                      children: validation.validationEmail\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"eight wide column\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Adresa\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"M\\u011Bsto\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"city\",\n                      placeholder: user === null ? \"Město\" : user.city,\n                      id: \"First name\",\n                      required: true,\n                      onChange: e => setCity(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"validation\",\n                      children: validation.validationCity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Ulice v\\u010Detn\\u011B \\u010D.p.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"address\",\n                      placeholder: user === null ? \"Ulice a číslo popisné\" : user.address,\n                      id: \"Last name\",\n                      required: true,\n                      onChange: e => setAddress(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"validation\",\n                      children: validation.validationAddress\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"PS\\u010C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"zip\",\n                      placeholder: user === null ? \"PSČ\" : user.zip,\n                      id: \"email\",\n                      required: true,\n                      onChange: e => setZip(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"validation\",\n                      children: validation.validationZip\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"ui button\",\n                type: \"submit\",\n                style: {\n                  marginTop: '30px'\n                },\n                onClick: submit,\n                children: \"Potvrdit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomerInfo, \"47rakAMoTb1XfPH9Q9ASoW25IXw=\", false, function () {\n  return [useForm];\n});\n\n_c = CustomerInfo;\nexport default CustomerInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerInfo\");","map":{"version":3,"sources":["/Users/JakubMac/Documents/GitHub/Fapi/frontend/src/pages/CustomerInfo.jsx"],"names":["React","useState","Navigate","UserContext","useForm","CustomerInfo","name","setName","companyName","setCompanyName","email","setEmail","address","setAddress","city","setCity","zip","setZip","redirect","setRedirect","user","setUser","useContext","validation","setValidation","validationName","validationEmail","validationCompany","validationCity","validationAddress","validationZip","register","handleSubmit","onSubmit","data","console","log","submit","e","preventDefault","response","isValidName","trim","isValidCompany","isValidEmail","length","isValidCity","isValidAddress","lenght","isValidZip","marginTop","margin","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\nimport { UserContext } from '../components/context/UserContext'\nimport { useForm } from \"react-hook-form\";\n\nconst CustomerInfo = () => {\n  const [name, setName] = useState(\"\")\n  const [companyName, setCompanyName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [address, setAddress] = useState(\"\")\n  const [city, setCity] = useState(\"\")\n  const [zip, setZip] = useState(\"\")\n  const [redirect, setRedirect] = useState(false);\n  const { user, setUser } = React.useContext(UserContext)\n  const [validation, setValidation] = useState({\n    validationName: \"\",\n    validationEmail: \"\",\n    validationCompany: \"\",\n    validationCity: \"\",\n    validationAddress: \"\",\n    validationZip: \"\",\n  })\n  const { register, handleSubmit } = useForm();\n  const onSubmit = data => console.log(data);\n\n  const submit = async (e) => {\n    e.preventDefault();\n    const response = { name, companyName, email, address, city, zip };\n    setUser(response)\n    //Validation\n    const isValidName = name != null && name.trim() > 2;\n    const isValidCompany = companyName != null && name.trim() > 2;\n    const isValidEmail = email != null && email.trim().length > 0;\n    const isValidCity = city != null && city.trim().length > 0;\n    const isValidAddress = address != null && address.trim().lenght > 0;\n    const isValidZip = zip != null && zip.trim().length > 0;\n    if (!isValidEmail) {\n      validation.validationEmail = \"Je potřeba vyplnit email.\"\n    } if (!isValidName) {\n      validation.validationName = \"Je potřeba vyplnit jméno a příjmení.\"\n    } if (!isValidCompany) {\n      validation.validationCompany = \"Je potřeba vyplnit název firmy.\"\n    } if (!isValidCity) {\n      validation.validationCity = \"Je potřeba vyplnit město.\"\n    } if (!isValidAddress) {\n      validation.validationAddress = \"Je potřeba vyplnit adresu.\"\n    } if (!isValidZip) {\n      validation.validationZip = \"Je potřeba vyplnit PSČ.\"\n    }\n    else {\n      setRedirect(true)\n    }\n  }\n\n  if (redirect) {\n    return <Navigate to={\"/products\"} />\n  }\n\n  return (\n    <div className='ui vertical mashead segment' style={{ marginTop: \"50px\" }}>\n      <div className='ui center aligned container'>\n        <div className=\"ui vertical left aligned footer segment\">\n          <div className=\"center aligned container\" id='CustomerInfo'>\n            <div style={{ margin: \"30px\" }}>\n              <h1>Prosím zadejte všechny své údaje</h1>\n            </div>\n            <div style={{ margin: \"20px\" }}>\n              <form className=\"ui form\">\n                <div className=\"ui stackable inverted divided grid\">\n                  <div className=\"eight wide column\">\n                    <div className=\"field\">\n                      <h3>Objednavatel</h3>\n                      <label>Jméno a příjmení</label>\n                      <input\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder={user === null ? \"Jméno a příjmení\" : user.name}\n                        required\n                        onChange={(e) => setName(e.target.value)}\n                      />\n                      <div className=\"validation\">{validation.validationName}</div>\n                    </div>\n                    <div className=\"field\">\n                      <label>Název firmy</label>\n                      <input\n                        type=\"text\"\n                        name=\"company\"\n                        placeholder={user === null ? \"Název firmy\" : user.companyName}\n                        required\n                        onChange={(e) => setCompanyName(e.target.value)}\n                      />\n                      <div className=\"validation\">{validation.validationCompany}</div>\n                    </div>\n                    <div className=\"field\">\n                      <label>Email</label>\n                      <input\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder={user === null ? \"Email\" : user.email}\n                        id=\"email\"\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                      <div className=\"validation\">{validation.validationEmail}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"eight wide column\">\n                    <h3>Adresa</h3>\n                    <div className=\"field\">\n                      <label>Město</label>\n                      <input\n                        type=\"text\"\n                        name=\"city\"\n                        placeholder={user === null ? \"Město\" : user.city}\n                        id=\"First name\"\n                        required\n                        onChange={(e) => setCity(e.target.value)}\n                      />\n                      <div className=\"validation\">{validation.validationCity}</div>\n                    </div>\n                    <div className=\"field\">\n                      <label>Ulice včetně č.p.</label>\n                      <input\n                        type=\"text\"\n                        name=\"address\"\n                        placeholder={user === null ? \"Ulice a číslo popisné\" : user.address}\n                        id=\"Last name\"\n                        required\n                        onChange={(e) => setAddress(e.target.value)}\n                      />\n                      <div className=\"validation\">{validation.validationAddress}</div>\n                    </div>\n                    <div className=\"field\">\n                      <label>PSČ</label>\n                      <input\n                        type=\"text\"\n                        name=\"zip\"\n                        placeholder={user === null ? \"PSČ\" : user.zip}\n                        id=\"email\"\n                        required\n                        onChange={(e) => setZip(e.target.value)}\n                      />\n                      <div className=\"validation\">{validation.validationZip}</div>\n                    </div>\n                  </div>\n                </div>\n\n                <button\n                  className=\"ui button\"\n                  type=\"submit\"\n                  style={{ marginTop: '30px' }}\n                  onClick={submit}\n                >\n                  Potvrdit\n                </button>\n\n              </form>\n            </div>\n          </div>\n        </div></div>\n    </div >\n  )\n}\n\nexport default CustomerInfo"]},"metadata":{},"sourceType":"module"}